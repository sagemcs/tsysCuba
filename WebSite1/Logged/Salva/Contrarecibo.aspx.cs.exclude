using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;

public partial class Logged_Contrarecibo : System.Web.UI.Page
{
    private PortalProveedoresEntities db = new PortalProveedoresEntities();
    //protected void Page_Load(object sender, EventArgs e)
    //{
    //    if (!IsPostBack)
    //    {
    //        List<Vendors> list = db.Vendors.ToList();
    //        List<ProveedorDTO> list_dto = new List<ProveedorDTO>();
    //        foreach (Vendors access in list)
    //        {
    //            ProveedorDTO dto = new ProveedorDTO(
    //                access.VendorKey.ToString(),
    //                access.VendName,
    //                access.VendorID,
    //                access.Users.Company.FirstOrDefault() != null ? access.Users.Company.First().CompanyName : string.Empty,
    //                "rfc",
    //                access.CreateDate != null ? access.CreateDate.Value.ToShortDateString().ToString() : string.Empty,
    //                access.UpdateDate != null ? access.UpdateDate.Value.ToShortDateString().ToString() : string.Empty,
    //                access.Status.ToString()
    //            );

    //            list_dto.Add(dto);

    //        }

    //        comboProveedores.DataSource = list_dto;
    //        comboProveedores.DataTextField = "Nombre";
    //        comboProveedores.DataValueField = "ID";
    //        comboProveedores.DataBind();
    //    }
    //    else
    //    {
    //        //foreach (TableRow tr in Tabla_Facturas.Rows)
    //        //{
    //        //    if (tr.TableSection == TableRowSection.TableBody)
    //        //    {
    //        //        foreach (TableCell td in tr.Cells)
    //        //        {
    //        //            var controls = td.Controls;
    //        //        }
    //        //    }
    //        //}
    //    }
    //}


    protected void Page_Load(object sender, EventArgs e)
    {
        if (!IsPostBack)
        {
            List<Vendors> list = db.Vendors.ToList();
            List<ProveedorDTO> list_dto = new List<ProveedorDTO>();
            foreach (Vendors access in list)
            {
                ProveedorDTO dto = new ProveedorDTO(
                    access.VendorKey.ToString(),
                    access.VendName,
                    access.VendorID,
                    access.Users.Company.FirstOrDefault() != null ? access.Users.Company.First().CompanyName : string.Empty,
                    "rfc",
                    access.CreateDate != null ? access.CreateDate.Value.ToShortDateString().ToString() : string.Empty,
                    access.UpdateDate != null ? access.UpdateDate.Value.ToShortDateString().ToString() : string.Empty,
                    access.Status.ToString()
                );

                list_dto.Add(dto);

            }

            comboProveedores.DataSource = list_dto;
            comboProveedores.DataTextField = "Nombre";
            comboProveedores.DataValueField = "ID";
            comboProveedores.DataBind();
        }
        else
        {
            //string json_ids = facturas_seleccionadas.Value.ToString();
        }

    }
    protected void Buscar(object sender, EventArgs e)
    {
        if (IsValid)
        {
            try
            {
                int vendorKey = Convert.ToInt32(comboProveedores.SelectedValue);

                List<FacturaDTO> facturas = new List<FacturaDTO>();
                PortalProveedoresEntities db = new PortalProveedoresEntities();
                List<Invoice> list = db.Invoice.ToList();

                foreach (Invoice invoice in list.Where(i => i.VendorKey == vendorKey && i.InvcRcptDetails.Count == 0))
                {
                    Int32 AprovUserKey = Convert.ToInt32(invoice.AprovUserKey);
                    Users user = db.Users.Where(u => u.UserKey == AprovUserKey).FirstOrDefault();
                    facturas.Add(new FacturaDTO(invoice.CompanyID, invoice.Folio, invoice.Serie, invoice.CreateDate != null ? invoice.CreateDate.Value.ToShortDateString().ToString() : string.Empty, invoice.Vendors != null ? invoice.Vendors.VendorID : string.Empty,
                        invoice.Subtotal != null ? invoice.Subtotal.ToString() : "0", invoice.ImpuestoImporte != null ? invoice.ImpuestoImporte.ToString() : "0", invoice.Descuento != null ? invoice.Descuento.ToString() : "0",
                        invoice.Total != null ? invoice.Total.ToString() : "0", invoice.UUID, user != null ? user.UserID : string.Empty, invoice.Status != null ? invoice.Status.ToString() : string.Empty, invoice.Moneda));

                   
                }

                #region Header

                TableRow tr = new TableRow();
                tr.TableSection = TableRowSection.TableHeader;
                TableCell cellhead1 = new TableCell();
                cellhead1.Text = "Serie";
                tr.Cells.Add(cellhead1);
                tr.DataBind();

                TableCell cellhead2 = new TableCell();
                cellhead2.Text = "Folio";
                tr.Cells.Add(cellhead2);
                tr.DataBind();

                TableCell cellhead3 = new TableCell();
                cellhead3.Text = "Subtotal";
                tr.Cells.Add(cellhead3);
                tr.DataBind();

                TableCell cellhead4 = new TableCell();
                cellhead4.Text = "Moneda";
                tr.Cells.Add(cellhead4);
                tr.DataBind();

                TableCell cellhead5 = new TableCell();
                cellhead5.Text = "Total";
                tr.Cells.Add(cellhead5);
                tr.DataBind();

                TableCell cellhead6 = new TableCell();
                cellhead6.Text = "Llevar a contrarecibo";
                tr.Cells.Add(cellhead6);
                tr.DataBind();

                Tabla_Facturas.Rows.Add(tr);
                Tabla_Facturas.DataBind();

                #endregion Header

                foreach (var item in facturas)
                {
                    tr = new TableRow();
                    tr.TableSection = TableRowSection.TableBody;
                    TableCell cell1 = new TableCell();
                    cell1.Text = item.Serie;
                    tr.Cells.Add(cell1);
                    tr.DataBind();

                    TableCell cell2 = new TableCell();
                    cell2.Text = item.Folio;
                    tr.Cells.Add(cell2);
                    tr.DataBind();

                    TableCell cell3 = new TableCell();
                    cell3.Text = item.Subtotal;
                    tr.Cells.Add(cell3);
                    tr.DataBind();

                    TableCell cell4 = new TableCell();
                    cell4.Text = item.Moneda;
                    tr.Cells.Add(cell4);
                    tr.DataBind();

                    TableCell cell5 = new TableCell();
                    cell5.Text = item.Total;
                    tr.Cells.Add(cell5);
                    tr.DataBind();

                    TableCell cell6 = new TableCell();
                    // cell6.Text = "<input id='MainContent_CheckBox" + item.Folio + "' type='checkbox' name='ctl00$MainContent$CheckBox" + item.Folio + "'>";
                    cell6.Text = "<input id='checkBox_" + item.Folio + "' type='checkbox' name='checkBox_" + item.Folio + "'>";
                    tr.Cells.Add(cell6);
                    tr.DataBind();

                    Tabla_Facturas.Rows.Add(tr);
                    Tabla_Facturas.DataBind();
                }
               
               // ViewState["Tabla_Facturas"] = t;

            }
            catch(Exception ex)
            {
                string pp = ex.ToString();
            }
            
        }
    }

    protected void Generar(object sender, EventArgs e)
    {
        if (IsValid)
        {
            Tabla_Facturas = (System.Web.UI.WebControls.Table)ViewState["Tabla_Facturas"];
            foreach (TableRow tr in Tabla_Facturas.Rows)
            {
                if(tr.TableSection == TableRowSection.TableBody)
                {
                   foreach(TableCell td in tr.Cells)
                    {
                        var controls = td.Controls;
                    }
                }
            }
        }
    }
}